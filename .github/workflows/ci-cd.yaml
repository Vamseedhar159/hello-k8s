name: Hello-K8s CI/CD

on:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-image.outputs.image }}
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        id: set-image
        run: |
          IMAGE_NAME=hello-k8s:1.0
          docker build -t $IMAGE_NAME ./app
          echo "image=$IMAGE_NAME" >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag ${{ steps.set-image.outputs.image }} ${{ secrets.DOCKER_USERNAME }}/hello-k8s:1.0
          docker push ${{ secrets.DOCKER_USERNAME }}/hello-k8s:1.0

  smoke-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.26.0'

      - name: Deploy to test namespace
        run: |
          kubectl create ns test --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f k8s-deployment.yaml -n test
          kubectl wait --for=condition=ready pod -l app=hello -n test --timeout=60s

      - name: Smoke Test
        run: |
          NODE_IP=$(kubectl get svc hello-service -n test -o jsonpath='{.spec.clusterIP}')
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://$NODE_IP:5000/hello)
          if [ "$STATUS" != "200" ]; then
            echo "Smoke test failed!"
            exit 1
          else
            echo "Smoke test passed!"
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: smoke-test
    steps:
      - uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.27.3'

      - name: Deploy to production
        run: |
          kubectl apply -f k8s-deployment.yaml -n default
          kubectl wait --for=condition=ready pod -l app=hello -n default --timeout=60s
