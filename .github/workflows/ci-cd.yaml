name: Hello-K8s CI/CD

on:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-image.outputs.image }}
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        id: set-image
        run: |
          IMAGE_NAME=dockwithvamsee/hello-k8s:1.0  # ✅ Replace with your DockerHub username
          docker build -t $IMAGE_NAME ./app
          echo "image=$IMAGE_NAME" >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push ${{ steps.set-image.outputs.image }}

  smoke-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Install kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create kind cluster
        run: kind create cluster

      - name: Docker login & pull image
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker image
        run: docker pull ${{ steps.set-image.outputs.image }}

      - name: Load Docker image into kind
        run: kind load docker-image ${{ steps.set-image.outputs.image }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.3'

      - name: Deploy to test namespace
        run: |
          kubectl create ns test --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f k8s-deployment.yaml -n test
          kubectl wait --for=condition=ready pod -l app=hello -n test --timeout=120s

      - name: Smoke Test
        run: |
          POD_NAME=$(kubectl get pod -l app=hello -n test -o jsonpath='{.items[0].metadata.name}')
          kubectl port-forward $POD_NAME 5000:5000 -n test &
          sleep 5
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/hello)
          if [ "$STATUS" != "200" ]; then
            echo "Smoke test failed!"
            exit 1
          else
            echo "Smoke test passed!"
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: smoke-test
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to production
        run: echo "Smoke test passed → deploy step would go here"
